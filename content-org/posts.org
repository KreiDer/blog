#+hugo_base_dir: ../
#+seq_todo: TODO DRAFT DONE
#+property: header-args :eval never-export

* My Blog
:PROPERTIES:
:EXPORT_HUGO_SECTION:
:END:
** About Me
:PROPERTIES:
:EXPORT_FILE_NAME: about
:EXPORT_HUGO_SECTION: page
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :subtitle "Do what you can, with what you've got, where you are."
:END:
Hello name is Yauheni Kuzmianok. I'm software developer with about 6 year of exprience.

[[file:/images/about_main.gif][file:/images/about_main.gif]]
*** My interrests:
- Programming
- Emacs
- Efficency and productivity
- Functional programming
*** Projects
- [[https://github.com/KreiDer/fly-keys-plugin][fly keys]] - IntelliJ Idea plugin for modal editing
*** Work
**** Amway 
- *Role*: Developer
- *Customer*: Amway
- *Period*: July 2018 till now
- *Technology*: Kotlin, Java, Spring, Hybris, Servlets/JSP, JSTL, jQuery, AJAX, JavaScript, JSON, HTML, CSS
**** Traveler Distributed platform
- *Role*: Development Team Lead
- *Customer*: Datalex, inc
- *Period*: Feb 2012 - May 2013 and July 2014 - July 2018
- *Technology*: Java, Struts, Tiles, Servlets/JSP, JSTL, jQuery, AJAX, JavaScript, JSON, HTML, CSS, Velocity Templates, Closure Templates

** DONE Ride of Pok3r                                  :keyboard:pok3r:poker:
   CLOSED: [2018-07-27 Fri 15:38]
:PROPERTIES:
:EXPORT_FILE_NAME: ride_of_pok3r
:EXPORT_HUGO_SECTION: post
:END:
This guide for how to programm an ergonomic layout with Pok3r keyboard
[[file:/images/ride_of_pok3r-keyboard-layout.png][file:/images/ride_of_pok3r-keyboard-layout.png]]

#+hugo: more
Here we are going to remap the default pok3r keys to more suitable places and it will be much more ergonomic and handy in work I promise.
 
If you are interesting in details how to setup this keyboard please see
[[http://www.vortexgear.tw/db/upload/webdata4/6vortex_20166523361966663.pdf][user manual]] and [[https://www.reddit.com/r/MechanicalKeyboards/wiki/pok3r][reddit wiki]]

Some people prefer to have =hjkl= in opposite of my =ijkl= and I understand them as they are VIM users but I'm emacs user and use emacs on daily basis.
I was inspired by [[http://xahlee.info/][Xah Lee]] with a lot of efficient articles you can read it [[http://ergoemacs.org/][here]]

*** Main features:
- Move <kbd>Fn</kbd> to  <kbd>L_Ctrl</kbd> place
- <kbd>Capslock</kbd> as <kbd>Esc</kbd> as I often use escape key so capslock is the best place for it
- <kbd>Fn</kbd> + <kbd>z</kbd>,<kbd>x</kbd>,<kbd>c</kbd>,<kbd>v</kbd> as regular copy, cut, past operations (it will provide us do copy and paste with only left hand)
- <kbd>Fn</kbd> + <kbd>u</kbd> and <kbd>o</kbd> for word navigation

*** Remap <kbd>Fn</kbd> key to <kbd>L_Ctrl</kbd>
- Unplug keyboard from usb
- Switch DIP switch 4 to ON
- Plug keyboard then press <kbd>Fn</kbd> -> <kbd>L_Ctrl</kbd> -> <kbd>Pn</kbd> -> <kbd>Pn</kbd> again (to leave it in its original location)
- Switch DIP 4 back to OFF

[[file:/images/ride_of_pok3r-palm_pressing_control_key_from_youngstabber.jpg][file:/images/ride_of_pok3r-palm_pressing_control_key_from_youngstabber.jpg]]
So from now you able to press <kbd>Fn</kbd> by your palm as on image below to avoid RSI and issues with your pinky.
*** Enter to programming mode
- Switch to any layer for example <kbd>Fn</kbd> + <kbd>,</kbd>
- Press <kbd>Fn</kbd> + <kbd>R_Ctrl</kbd> to enter programming (Don't forget that <kbd>Fn</kbd> aleady on left side)
- To map something you need to press key that you want to remap then result key and <kbd>Pn</kbd> key in end of each sequence:
  - <kbd>L_Win</kbd> -> <kbd>L_Alt</kbd> -> <kbd>Pn</kbd>
  - <kbd>L_Alt</kbd> -> <kbd>L_Win</kbd> -> <kbd>Pn</kbd>
  - <kbd>R_Alt</kbd> -> <kbd>L_Win</kbd> -> <kbd>Pn</kbd>
  - <kbd>CapsLock</kbd> -> <kbd>Escape</kbd> -> <kbd>Pn</kbd>
  - <kbd>Escape</kbd> -> <kbd>Fn</kbd> + <kbd>Escape</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>z</kbd> -> <kbd>L_Win</kbd> + <kbd>z</kbd> -> <kbd>Pn</kbd> 
  - <kbd>Fn</kbd> + <kbd>x</kbd> -> <kbd>L_Win</kbd> + <kbd>x</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>c</kbd> -> <kbd>L_Win</kbd> + <kbd>c</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>v</kbd> -> <kbd>L_Win</kbd> + <kbd>v</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>w</kbd> -> <kbd>L_Win</kbd> + <kbd>w</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>a</kbd> -> <kbd>L_Win</kbd> + <kbd>a</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>;</kbd> -> <kbd>Fn</kbd> + <kbd>n</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>u</kbd> -> <kbd>L_Alt</kbd> + <kbd>Left</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>o</kbd> -> <kbd>L_Alt</kbd> + <kbd>Right</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>9</kbd> -> <kbd>Fn</kbd> + <kbd>u</kbd> -> <kbd>Pn</kbd>
  - <kbd>Fn</kbd> + <kbd>0</kbd> -> <kbd>Fn</kbd> + <kbd>o</kbd> -> <kbd>Pn</kbd>
    
- Press <kbd>Fn</kbd> + <kbd>R_Ctrl</kbd> to exit
*** Here are compleated list of keys:

| Key from        | Key to         |
|-----------------+----------------|
| L_Ctrl          | Fn             |
| L_Win           | Option         |
| L_Alt           | Cmd            |
| R_Alt           | Cmd            |
| CapsLock        | Escape         |
| Escape          | `              |
| Shift + Espcape | ~              |
| fn + z          | Cmd + z        |
| fn + x          | Cmd + x        |
| fn + c          | Cmd + c        |
| fn + v          | Cmd + v        |
| fn + w          | Cmd + w        |
| fn + a          | Cmd + a        |
| fn + h          | Home           |
| fn + :          | End            |
| fn + u          | Option + Left  |
| fn + o          | Option + Right |
| fn + 9          | PgUp           |
| fn + 0          | PgDown         |
** DRAFT Modal editing in intelliJ idea like VIM          :intellij:idea:VIM:
** DONE IJKL Navigation in Karabiner :karabier:keyboard:macos:macbook:ergonomic:
   CLOSED: [2018-07-31 Tue 13:13]
:PROPERTIES:
:EXPORT_FILE_NAME: karabiner_workflow
:EXPORT_HUGO_SECTION: post
:END:
I'm macbook user and have programable keyboard where I use <kbd>Fn</kbd> + <kbd>I</kbd>,<kbd>J</kbd>,<kbd>K</kbd>,<kbd>L</kbd>
instead of arrow keys. This way is more ergonomic as you don't need to move
your hand if you need use arrows. 
file:/images/karabiner_workflow_arrows.png
#+hugo: more
Sometimes I work without external keyboard and it's a pain if I type or proramming a lot and then I
need to move my hand to arrows. 

Fortunetely Mac OS have amazing application which is called =Karabiner= where you able to remap any keys or key sequence (even <kbd>Fn</kbd> keys sequence).
*** Instalation
- Install [[https://pqrs.org/osx/karabiner][Karabiner Elements]]
- Open the config [[karabiner://karabiner/assets/complex_modifications/import?url=https://raw.githubusercontent.com/KreiDer/dotfiles/master/.config/karabiner/assets/complex_modifications/karabiner_qwerty.json][qwerty]] or [[karabiner://karabiner/assets/complex_modifications/import?url=https://raw.githubusercontent.com/KreiDer/dotfiles/master/.config/karabiner/assets/complex_modifications/karabiner_dvorak.json][dvorak]] and select import
- Go to Complex Modifications tab and Add corespondent rules

So here are my layout that makes <kbd>⌥</kbd> + <kbd>I</kbd>,<kbd>J</kbd>,<kbd>K</kbd>,<kbd>L</kbd> as arrows along with some usefull stuff:

*** Word navigation
- <kbd>⌥</kbd> + <kbd>u</kbd> to <kbd>⌥</kbd> + <kbd>←</kbd> 
- <kbd>⌥</kbd> + <kbd>o</kbd> to <kbd>⌥</kbd> + <kbd>→</kbd>
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>u</kbd> to <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>←</kbd>
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>o</kbd> to <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>→</kbd>
*** Change ⌥ (or ⇧) + h/; to Home and End
- <kbd>⌥</kbd> + <kbd>h</kbd> to <kbd>⌘</kbd> + <kbd>←</kbd> 
- <kbd>⌥</kbd> + <kbd>;</kbd> to <kbd>⌘</kbd> + <kbd>→</kbd> 
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>h</kbd> to <kbd>⌘</kbd> + <kbd>⇧</kbd> + <kbd>←</kbd> 
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>;</kbd> to <kbd>⌘</kbd> + <kbd>⇧</kbd> + <kbd>→</kbd> 
*** Change ⌥ (or ⇧) + i/j/k/l to Arrows
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>j</kbd> to <kbd>⇧</kbd> + <kbd>←</kbd>
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>l</kbd> to <kbd>⇧</kbd> + <kbd>→</kbd>
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>i</kbd> to <kbd>⇧</kbd> + <kbd>↑</kbd>
- <kbd>⌥</kbd> + <kbd>⇧</kbd> + <kbd>k</kbd> to <kbd>⇧</kbd> + <kbd>↓</kbd>
- <kbd>⌥</kbd> + <kbd>j</kbd> to <kbd>←</kbd>
- <kbd>⌥</kbd> + <kbd>k</kbd> to <kbd>↓</kbd>
- <kbd>⌥</kbd> + <kbd>i</kbd> to <kbd>↑</kbd>
- <kbd>⌥</kbd> + <kbd>l</kbd> to <kbd>→</kbd>
*** Change Fn + to copy
- <kbd>Fn</kbd> + <kbd>z</kbd> to <kbd>⌘</kbd> + <kbd>z</kbd>
- <kbd>Fn</kbd> + <kbd>x</kbd> to <kbd>⌘</kbd> + <kbd>x</kbd>
- <kbd>Fn</kbd> + <kbd>c</kbd> to <kbd>⌘</kbd> + <kbd>c</kbd>
- <kbd>Fn</kbd> + <kbd>v</kbd> to <kbd>⌘</kbd> + <kbd>v</kbd>
- <kbd>Fn</kbd> + <kbd>a</kbd> to <kbd>⌘</kbd> + <kbd>a</kbd>
- <kbd>Fn</kbd> + <kbd>w</kbd> to <kbd>⌘</kbd> + <kbd>w</kbd>
*** ⌥ + 0 to Ctrl + c (for iTerm)
- <kbd>⌥</kbd> + <kbd>0</kbd> to <kbd>⌃</kbd> + <kbd>i</kbd>

PS: Here are some topics that inspired me [[http://xahlee.info/kbd/vi_hjkl_vs_inverted_t_ijkl_arrow_keys.html][ijkl]] and [[https://ergoemacs.github.io/][ergoemacs]].
